#!/bin/bash
# Pre-commit hook for code quality checks

set -e

echo "üîç Running pre-commit quality checks..."

# Function to check if command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå Not in a git repository"
    exit 1
fi

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo "‚úÖ No staged files to check"
    exit 0
fi

echo "üìù Staged files:"
echo "$STAGED_FILES"
echo ""

# Check shell scripts
SHELL_FILES=$(echo "$STAGED_FILES" | grep '\.sh$' || true)
if [ -n "$SHELL_FILES" ]; then
    echo "üêö Checking shell scripts..."
    if command_exists shellcheck; then
        echo "$SHELL_FILES" | xargs shellcheck || {
            echo "‚ùå Shell script linting failed"
            exit 1
        }
        echo "‚úÖ Shell scripts passed linting"
    else
        echo "‚ö†Ô∏è  shellcheck not found, skipping shell script linting"
    fi
fi

# Check Python files
PYTHON_FILES=$(echo "$STAGED_FILES" | grep '\.py$' || true)
if [ -n "$PYTHON_FILES" ]; then
    echo "üêç Checking Python files..."
    if command_exists ruff; then
        echo "$PYTHON_FILES" | xargs ruff check || {
            echo "‚ùå Python linting failed"
            exit 1
        }
        echo "‚úÖ Python files passed linting"
    else
        echo "‚ö†Ô∏è  ruff not found, skipping Python linting"
    fi
fi

# Check for secrets
echo "üîí Checking for potential secrets..."
SECRET_PATTERNS="password|secret|api[_-]?key|auth[_-]?token|private[_-]?key"
if echo "$STAGED_FILES" | xargs grep -i -E "$SECRET_PATTERNS" 2>/dev/null; then
    echo "‚ùå Potential secrets detected in staged files"
    echo "Please review and remove any hardcoded credentials"
    exit 1
fi
echo "‚úÖ No obvious secrets detected"

# Check file sizes
echo "üìè Checking file sizes..."
LARGE_FILES=$(echo "$STAGED_FILES" | xargs ls -la 2>/dev/null | awk '$5 > 1048576 {print $9, $5}' || true)
if [ -n "$LARGE_FILES" ]; then
    echo "‚ö†Ô∏è  Large files detected (>1MB):"
    echo "$LARGE_FILES"
    echo "Consider using Git LFS for large files"
fi

# Ensure VERSION file is updated if needed
if echo "$STAGED_FILES" | grep -q "bump_merged.sh\|Makefile\|\.github/workflows"; then
    if [ -f VERSION ]; then
        VERSION_STAGED=$(git diff --cached --name-only | grep "VERSION" || true)
        if [ -z "$VERSION_STAGED" ]; then
            echo "‚ÑπÔ∏è  Infrastructure files changed but VERSION not staged"
            echo "Consider updating VERSION if this is a significant change"
        fi
    fi
fi

echo ""
echo "‚úÖ Pre-commit checks passed!"
echo "üöÄ Ready to commit"