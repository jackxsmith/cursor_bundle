# Policies for version 6.9.39

## Versioning and Naming

* Upgrade scripts must bump the version number from 6.9.38 to 6.9.39 and follow the naming scheme `vX.Y.Z.sh` and `vX.Y.Z.zip`, with no extra prefixes or suffixes.

## Static and Dynamic Analysis

* Scripts have been added under `scripts/` for static analysis (`static_analysis.sh`) and dynamic security scanning (`dynamic_security_scan.sh`). These are invoked via Makefile targets `static-analysis` and `dynamic-scan`.
* Static analysis currently runs Ruff (Python lint) and ShellCheck (shell lint) if installed. Extend this script to include additional tools such as Semgrep, Bandit or CodeQL as required.
* Dynamic security scanning is currently a placeholder; integrate OWASP ZAP or Nikto to perform web application scans and save results in `dynamic_security.log`.
* The GitHub Actions workflow runs these analyses in separate jobs. Failures in these jobs should block merges to the `main` branch.

## Upgrade Procedure

1. Run this upgrade script using `bash` (not `sudo`).
2. After executing, run the test harness (`scripts/run_tests.sh`), the cross-platform install tests (`make install-tests`), and the static/dynamic analysis targets (`make static-analysis` and `make dynamic-scan`) locally. Investigate and resolve any failures.
3. Once satisfied, commit and push changes along with the new tag using `git push origin main --follow-tags`.

## Continuous Integration

* The CI workflow now includes jobs for static analysis and dynamic security scanning in addition to the build and install-tests. These run on every push and pull request to `main`.
* Ensure that all CI jobs pass before merging or releasing.

## Logging and Enterprise Tools

* Continue using the existing logging library (`scripts/lib/log.sh`) and test/build scripts from previous versions.
* Maintain the Makefile with targets for lint, test, security, release, install-tests, static-analysis, and dynamic-scan.
