diff --git a/21-policies_v6.9.53.txt b/21-policies_v6.9.53.txt
deleted file mode 100644
index 5335940..0000000
--- a/21-policies_v6.9.53.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-# Policies v6.9.53
-* Exactly one artefact/log is kept for each logical file, suffixed `_v6.9.53`.  Older duplicates (v6.9.35–52) are removed.
-* Version strings are updated before renaming, preventing missing‑file warnings.
-* The script is idempotent: it skips moves if the source and destination are the same, and checks that files exist before acting.
-* Lint results are written to `lint_report_v6.9.53.txt`.
-* Commits are made on a new branch named `release/v6.9.53` to avoid naming conflicts with the tag `v6.9.53`.  Both the branch and the tag are pushed to the `origin` remote.
diff --git a/VERSION b/VERSION
index b61acab..0e7536b 100644
--- a/VERSION
+++ b/VERSION
@@ -1 +1 @@
-6.9.53
+6.9.54
diff --git a/cleanup_report_v6.9.53.txt b/cleanup_report_v6.9.53.txt
deleted file mode 100644
index 5c96453..0000000
--- a/cleanup_report_v6.9.53.txt
+++ /dev/null
@@ -1,4 +0,0 @@
-cp   /home/jj/Downloads/cursor_bundle_v6.9.32/../cursor_bundle.zip → original_bundle.zip
-ver  updated text files
-lint report saved to lint_report_v6.9.53.txt
-new   21-policies_v6.9.53.txt
diff --git a/lint_report_v6.9.53.txt b/lint_report_v6.9.53.txt
deleted file mode 100644
index 35d07e5..0000000
--- a/lint_report_v6.9.53.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-Ruff not installed.
-ShellCheck not installed.
diff --git a/scripts/upgrades/v6.9.47.sh b/scripts/upgrades/v6.9.47.sh
index 38603c2..32ab0d7 100755
--- a/scripts/upgrades/v6.9.47.sh
+++ b/scripts/upgrades/v6.9.47.sh
@@ -1,12 +1,12 @@
 #!/usr/bin/env bash
-# v6.9.53.sh  (fixed)
+# v6.9.54.sh  (fixed)
 #
-# Bump 6.9.45 → 6.9.53 **and** normalise every path.
+# Bump 6.9.45 → 6.9.54 **and** normalise every path.
 # – Moves old upgrade scripts to scripts/upgrades/  (kept as‑is)
-# – Renames files containing 6.9.45 → 6.9.53
+# – Renames files containing 6.9.45 → 6.9.54
 # – Removes stray 6.9.(35‑44) fragments
-# – Appends _v6.9.53 suffix to logs / artefacts lacking it
-# – Generates rename_report_v6.9.53.txt
+# – Appends _v6.9.54 suffix to logs / artefacts lacking it
+# – Generates rename_report_v6.9.54.txt
 #
 # Re‑run safely; skips mv when src == dst and ignores scripts/upgrades/*
 # No auto‑push.
@@ -15,7 +15,7 @@ set -euo pipefail
 shopt -s globstar nullglob
 
 OLD_VERSION="6.9.45"
-NEW_VERSION="6.9.53"
+NEW_VERSION="6.9.54"
 REPO_DIR="${1:-$HOME/Downloads/cursor_bundle_v6.9.32}"
 REPORT="rename_report_v${NEW_VERSION}.txt"
 
diff --git a/v6.9.47.sh b/v6.9.47.sh
index 90e5f49..2d9c508 100755
--- a/v6.9.47.sh
+++ b/v6.9.47.sh
@@ -1,16 +1,16 @@
 #!/usr/bin/env bash
-# v6.9.53.sh
+# v6.9.54.sh
 #
 # Purpose
 # -------
-# • Bump project from 6.9.46 → 6.9.53
+# • Bump project from 6.9.46 → 6.9.54
 # • Remove *all* obsolete or duplicate artefacts, leaving exactly one copy per
-#   logical file (the latest, suffixed _v6.9.53) and deleting superseded logs,
+#   logical file (the latest, suffixed _v6.9.54) and deleting superseded logs,
 #   tarballs, reports, etc.
 # • Eliminate “missing‑file” warnings by updating version strings *before* any
 #   renames, and by checking each path exists before operating on it.
 # • Run a quick lint check (Ruff for Python, ShellCheck for Bash) and store
-#   results in `lint_report_v6.9.53.txt`.
+#   results in `lint_report_v6.9.54.txt`.
 # • Commit and tag locally (no automatic push).
 #
 # Safe to re‑run: skips moves if src=dst, skips deletes if file already gone.
@@ -19,7 +19,7 @@ set -euo pipefail
 shopt -s globstar nullglob
 
 OLD_VERSION="6.9.46"
-NEW_VERSION="6.9.53"
+NEW_VERSION="6.9.54"
 REPO_DIR="${1:-$HOME/Downloads/cursor_bundle_v6.9.32}"
 REPORT="cleanup_report_v${NEW_VERSION}.txt"
 LINT="lint_report_v${NEW_VERSION}.txt"
diff --git a/v6.9.51.sh b/v6.9.51.sh
index f537c15..b13a51a 100755
--- a/v6.9.51.sh
+++ b/v6.9.51.sh
@@ -1,16 +1,16 @@
 #!/usr/bin/env bash
-# v6.9.53.sh
+# v6.9.54.sh
 #
 # Purpose
 # -------
-# • Bump project from 6.9.50 → 6.9.53.
+# • Bump project from 6.9.50 → 6.9.54.
 # • Remove *all* obsolete or duplicate artefacts, leaving exactly one copy per
-#   logical file (the latest, suffixed _v6.9.53) and deleting superseded logs,
+#   logical file (the latest, suffixed _v6.9.54) and deleting superseded logs,
 #   tarballs, reports, etc.  This covers all older suffixes from 6.9.35 up
 #   through 6.9.50.
 # • Update version strings before any renames to avoid missing‑file warnings.
 # • Run a quick lint pass (Ruff for Python, ShellCheck for Bash) and store
-#   results in `lint_report_v6.9.53.txt`.
+#   results in `lint_report_v6.9.54.txt`.
 # • Commit, tag and automatically push to the `origin` remote.
 #
 # Safe to re‑run: skips moves if src=dst, skips deletes if file already gone.
@@ -19,7 +19,7 @@ set -euo pipefail
 shopt -s globstar nullglob
 
 OLD_VERSION="6.9.50"
-NEW_VERSION="6.9.53"
+NEW_VERSION="6.9.54"
 REPO_DIR="${1:-$HOME/Downloads/cursor_bundle_v6.9.32}"
 REPORT="cleanup_report_v${NEW_VERSION}.txt"
 LINT="lint_report_v${NEW_VERSION}.txt"
@@ -96,11 +96,11 @@ echo "lint report saved to $LINT" >>"$REPORT"
 # 5. Policies update
 ###############################################################################
 cat > "21-policies_v$NEW_VERSION.txt" <<'EOF'
-# Policies v6.9.53
-* Exactly one artefact/log is kept for each logical file, suffixed `_v6.9.53`.  Older duplicates (v6.9.35–50) are removed.
+# Policies v6.9.54
+* Exactly one artefact/log is kept for each logical file, suffixed `_v6.9.54`.  Older duplicates (v6.9.35–50) are removed.
 * Version strings are updated before renaming, preventing missing‑file warnings.
 * The script is idempotent: it skips moves if the source and destination are the same, and checks that files exist before acting.
-* Lint results are written to `lint_report_v6.9.53.txt`.
+* Lint results are written to `lint_report_v6.9.54.txt`.
 * Commit, tag and push to the `origin` remote are done automatically at the end.
 EOF
 echo "new   21-policies_v$NEW_VERSION.txt" >>"$REPORT"
diff --git a/v6.9.52.sh b/v6.9.52.sh
index 3b28089..653ef54 100755
--- a/v6.9.52.sh
+++ b/v6.9.52.sh
@@ -1,16 +1,16 @@
 #!/usr/bin/env bash
-# v6.9.53.sh
+# v6.9.54.sh
 #
 # Purpose
 # -------
-# • Bump project from 6.9.53 → 6.9.53.
+# • Bump project from 6.9.54 → 6.9.54.
 # • Remove *all* obsolete or duplicate artefacts, leaving exactly one copy per
-#   logical file (the latest, suffixed _v6.9.53) and deleting superseded logs,
+#   logical file (the latest, suffixed _v6.9.54) and deleting superseded logs,
 #   tarballs, reports, etc.  This covers all older suffixes from 6.9.35 up
-#   through 6.9.53.
+#   through 6.9.54.
 # • Update version strings before any renames to avoid missing‑file warnings.
 # • Run a quick lint pass (Ruff for Python, ShellCheck for Bash) and store
-#   results in `lint_report_v6.9.53.txt`.
+#   results in `lint_report_v6.9.54.txt`.
 # • Commit on a new branch named after the version, tag the commit, and
 #   automatically push both the branch and tag to the `origin` remote.
 #
@@ -19,8 +19,8 @@
 set -euo pipefail
 shopt -s globstar nullglob
 
-OLD_VERSION="6.9.53"
-NEW_VERSION="6.9.53"
+OLD_VERSION="6.9.54"
+NEW_VERSION="6.9.54"
 REPO_DIR="${1:-$HOME/Downloads/cursor_bundle_v6.9.32}"
 REPORT="cleanup_report_v${NEW_VERSION}.txt"
 LINT="lint_report_v${NEW_VERSION}.txt"
@@ -110,12 +110,12 @@ echo "lint report saved to $LINT" >>"$REPORT"
 # 5. Policies update
 ###############################################################################
 cat > "21-policies_v$NEW_VERSION.txt" <<'EOF'
-# Policies v6.9.53
-* Exactly one artefact/log is kept for each logical file, suffixed `_v6.9.53`.  Older duplicates (v6.9.35–51) are removed.
+# Policies v6.9.54
+* Exactly one artefact/log is kept for each logical file, suffixed `_v6.9.54`.  Older duplicates (v6.9.35–51) are removed.
 * Version strings are updated before renaming, preventing missing‑file warnings.
 * The script is idempotent: it skips moves if the source and destination are the same, and checks that files exist before acting.
-* Lint results are written to `lint_report_v6.9.53.txt`.
-* Commits are made on a new branch named `v6.9.53`; this branch and the associated tag are pushed to the `origin` remote.
+* Lint results are written to `lint_report_v6.9.54.txt`.
+* Commits are made on a new branch named `v6.9.54`; this branch and the associated tag are pushed to the `origin` remote.
 EOF
 echo "new   21-policies_v$NEW_VERSION.txt" >>"$REPORT"
 
